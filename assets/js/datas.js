var tableData = [{"TestID":1,"Test Name":"testFtpService","App Name":"AmazeFileManager","Stars":"4.8k","Version":"3.4.3","Context":"This test checks if it can use the FTPclient class to upload and download a test file. Some parts of these download and upload tasks are done asynchronously."},{"TestID":2,"Test Name":"testSecureFtpService","App Name":"AmazeFileManager","Stars":"4.8k","Version":"3.4.3","Context":"This test checks if it can use the FTPclient class to upload and download a test file with the secure option enabled. Some parts of these download and upload tasks are done asynchronously."},{"TestID":3,"Test Name":"testContinousPlaybackOffSingleEpisode[sonic]","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if a media can be played be a single time with the function continous playback off. Continous playback allows the next video to be automatically played once the current media file has finished playing. The test waits 1 second before asserting if the video is playing the correct media file. [sonic] refers to the name of the media player used for the test."},{"TestID":4,"Test Name":"testStartLocal[builtin]","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if a media can be played be a single time. The test waits 1 second before asserting if the video is playing the correct media file. [builtin] refers to the name of the media player used for the test."},{"TestID":5,"Test Name":"testReplayEpisodeContinuousPlaybackOn[builtin]","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if 3 media files can be played in sequence witth the continous playback feature on. The test waits 1 second for the first video to load then 5 seconds for the second video to load and lastly 1 second for the third video to load. [builtin] refers to the name of the media player used for the test."},{"TestID":6,"Test Name":"testContinousPlaybackOffSingleEpisode[exoplayer]","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if a media can be played be a single time with the function continous playback off. Continous playback allows the next video to be automatically played once the current media file has finished playing. The test waits 1 second before asserting if the video is playing the correct media file. [exoplayer] refers to the name of the media player used for the test."},{"TestID":7,"Test Name":"testReplayEpisodeContinuousPlaybackOff[builtin]","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if 3 media files can be played in sequence with the continous playback feature off. The test waits 1 second for the first video to load then 5 seconds for the second video to load and lastly 1 second for the third video to load. [builtin] refers to the name of the media player used for the test."},{"TestID":8,"Test Name":"testReplayEpisodeContinuousPlaybackOff[sonic]","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if 3 media files can be played in sequence with the continous playback feature off. The test waits 1 second for the first video to load then 5 seconds for the second video to load and lastly 1 second for the third video to load."},{"TestID":9,"Test Name":"testStartLocal[sonic]","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if a media can be played be a single time. The test waits 1 second before asserting if the video is playing the correct media file. [sonic] refers to the name of the media player used for the test."},{"TestID":10,"Test Name":"testReplayEpisodeContinuousPlaybackOff[exoplayer]","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if 3 media files can be played in sequence with the continous playback feature off. The test waits 1 second for the first video to load then 5 seconds for the second video to load and lastly 1 second for the third video to load. [exoplayer] refers to the name of the media player used for the test."},{"TestID":11,"Test Name":"testStartLocal[exoplayer]","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if a media can be played be a single time. The test waits 1 second before asserting if the video is playing the correct media file. [exoplayer] refers to the name of the media player used for the test. [exoplayer] refers to the name of the media player used for the test."},{"TestID":12,"Test Name":"testReplayEpisodeContinuousPlaybackOn[sonic]","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if 3 media files can be played in sequence witth the continous playback feature on. The test waits 1 second for the first video to load then 5 seconds for the second video to load and lastly 1 second for the third video to load. [sonic] refers to the name of the media player used for the test."},{"TestID":13,"Test Name":"testContinousPlaybackOffSingleEpisode[builtin]","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if a media can be played be a single time with the function continous playback off. Continous playback allows the next video to be automatically played once the current media file has finished playing. The test waits 1 second before asserting if the video is playing the correct media file. [builtin] refers to the name of the media player used for the test."},{"TestID":14,"Test Name":"testAddFeed","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if an RSS can be sucesfully added."},{"TestID":15,"Test Name":"testClickNavDrawer","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if the navigation drawer can be opened and each of its items can be accessed."},{"TestID":16,"Test Name":"testRewindChange","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if you can change the rewind duration setting. This setting is stored under user preferences and the get function is performed asynchronously."},{"TestID":17,"Test Name":"testFastForwardChange","App Name":"AntennaPod","Stars":"5.4k","Version":"1.8.1","Context":"This test checks if you can change the fast forward duration setting. This setting is stored under user preferences and the get function is performed asynchronously."},{"TestID":18,"Test Name":"clickOnNavigationDrawerItem_ChangeTheme","App Name":"Espresso","Stars":"1.1k","Version":"1.0.0","Context":"This test checks if the color of the theme for the app can be changed."},{"TestID":19,"Test Name":"swipeViewPager_scrollPage","App Name":"Espresso","Stars":"1.1k","Version":"1.0.0","Context":"This test checks if everything in the viewPager is displaying correctly whilst scrolling through it."},{"TestID":20,"Test Name":"typeValidNumber_ShowHomeScreen","App Name":"Espresso","Stars":"1.1k","Version":"1.0.0","Context":"This test checks if the app can input a valid package tracking number and then move to the home screen and automatically display the package name."},{"TestID":21,"Test Name":"typeInvalidNumber_ShowErrorTip","App Name":"Espresso","Stars":"1.1k","Version":"1.0.0","Context":"This test checks if the app can output an error tip when an invalid tracking number is input."},{"TestID":22,"Test Name":"latestSyncWorksIfFeed","App Name":"Feeder","Stars":756,"Version":"1.8.9","Context":"This test checks if the latest sync time is being updated correctly when entering a single new feed is added to an empty database. Since this an concurrent operation, a timeout of 1000ms is used before the assert operation is performed."},{"TestID":23,"Test Name":"appHasOneTabAndReceiveBrowsingIntent_tabIncreasedAndBrowse","App Name":"FireFoxLite","Stars":280,"Version":"2.1.19","Context":"This test checks if the app can receive and correctly respond to a browser intent whilst the app is in use. IdlingRegistry is an Espresso class that notifies the testing thread when an asynchronous operation has finished it's task(s). This test uses this class for some of its asynchronous operations."},{"TestID":24,"Test Name":"showRateAppPromotionAndClickFeedback_openFeedbackUrl","App Name":"FireFoxLite","Stars":280,"Version":"2.1.19","Context":"This test checks if the app opens and loads the correct feedback web page for providing user feedback. IdlingRegistry is an Espresso class that notifies the testing thread when an asynchronous operation has finished it's task(s). This test uses this class for some of its asynchronous operations."},{"TestID":25,"Test Name":"clickSearchSuggestion_browseByDefaultSearchEngine","App Name":"FireFoxLite","Stars":280,"Version":"2.1.19","Context":"This test checks if the app can use the default search engine and enter some text to display search suggestions and then click on one the displayed search suggestions."},{"TestID":26,"Test Name":"deleteTopSite_deleteSuccessfully","App Name":"FireFoxLite","Stars":280,"Version":"2.1.19","Context":"This test checks if it can delete a website from the list of top websites."},{"TestID":27,"Test Name":"browsingWebsiteBackAndForward_backAndFrowardToWebsite","App Name":"FireFoxLite","Stars":280,"Version":"2.1.19","Context":"This test checks if the app can type in the url for 2 different websites and go back and forth between the two using the back and next buttons."},{"TestID":28,"Test Name":"testChangeAttributesFromCode","App Name":"FlexBox","Stars":"18.1k","Version":"2.0.1","Context":"This test checks whether methods can succesfully change the attributes of a flexbox instance."},{"TestID":29,"Test Name":"testDeleteAccountWithSubaccounts","App Name":"Gnucash","Stars":"1.2k","Version":"2.4.0","Context":"This test check if an account that contains subaccounts can be sucessfully deleted."},{"TestID":30,"Test Name":"test","App Name":"Kaspresso","Stars":"1.7k","Version":"1.1.0","Context":"This test provides a framework that checks if UI elements display correctly."},{"TestID":31,"Test Name":"testExternalBarHiddenWhenViewingAllApps","App Name":"Kiss","Stars":"2.7k","Version":"3.11.9","Context":"This test checks to see if the external favorite apps bar is hidden when the view all apps page is being viewed."},{"TestID":32,"Test Name":"testInternalBarHiddenWhenViewingAllAppsWithExternalModeOn","App Name":"Kiss","Stars":"2.7k","Version":"3.11.9","Context":"This test checks to see if the embedded favorite apps bar is hidden when the view all apps page is being viewed."},{"TestID":33,"Test Name":"testInternalBarDisplayedWhenViewingAllApps","App Name":"Kiss","Stars":"2.7k","Version":"3.11.9","Context":"This test checks to see if the embedded favorite apps bar can be enabled and displayed when the view all apps page is being viewed."},{"TestID":34,"Test Name":"testSearchResultAppears","App Name":"Kiss","Stars":"2.7k","Version":"3.11.9","Context":"This test checks to see if the search function works."},{"TestID":35,"Test Name":"testBatterySettingAppears","App Name":"Kiss","Stars":"2.7k","Version":"3.11.9","Context":"This test checks to see if the battery setting appears when it is searched for in the search bar."},{"TestID":36,"Test Name":"testKissBarDisplayed","App Name":"Kiss","Stars":"2.7k","Version":"3.11.9","Context":"This test checks to see if the KISS bar is displayed when viewing all apps."},{"TestID":37,"Test Name":"testKissBarHidden","App Name":"Kiss","Stars":"2.7k","Version":"3.11.9","Context":"This test checks to see if the KISS bar is hidden when going from viewing all pages back to the home screen."},{"TestID":38,"Test Name":"cloneCommandIncreasesListSize","App Name":"MyExpenses","Stars":630,"Version":"3.0.7.1","Context":"This test checks if List size by 1 when the clone transaction command is executed."},{"TestID":39,"Test Name":"editCommandKeepsListSize","App Name":"MyExpenses","Stars":630,"Version":"3.0.7.1","Context":"This test checks if the edit transaction function maintains the same List size after saving."},{"TestID":40,"Test Name":"testScenarioForBug5b11072e6007d59fcd92c40b","App Name":"MyExpenses","Stars":630,"Version":"3.0.7.1","Context":"This test checks for the bug where the user toggles from expense (where we have at least one payment method) to income (where there is none) and then selects category, or opens calculator, and comes back and causes saving to fail."},{"TestID":41,"Test Name":"testUsualVideo","App Name":"YoutubeExtractor","Stars":874,"Version":"2.0.0","Context":"This test check if it can download a predefined Youtube video."},{"TestID":42,"Test Name":"testUnembeddable","App Name":"YoutubeExtractor","Stars":874,"Version":"2.0.0","Context":"This test check if it can download a predefined Youtube video that is umembeddable."},{"TestID":43,"Test Name":"testEncipheredVideo","App Name":"YoutubeExtractor","Stars":874,"Version":"2.0.0","Context":"This test check if it can download a predefined Youtube video that is enciphered."},{"TestID":44,"Test Name":"testAgeRestrictVideo","App Name":"YoutubeExtractor","Stars":874,"Version":"2.0.0","Context":"This test check if it can download a predefined Youtube video that is age restricted."},{"TestID":45,"Test Name":"doIntro_None","App Name":"Aegis","Stars":"6.7k","Version":"2.0.3","Context":"This test checks if the user can create a password vault without a vault password. It performs some tasks asynchronously. Sometimes the assert can be performed at the wrong time and the test will fail"},{"TestID":46,"Test Name":"clickFilters_showFilters","App Name":"GoogleIO","Stars":"21.8k","Version":"7.0.15","Context":"This test checks if the filter for different types of events can be succesfully applied."},{"TestID":47,"Test Name":"testVideoPlayback","App Name":"Mozzilia Focus","Stars":"2.1k","Version":102,"Context":"This test checks if it can load a page that contains a video and play and pause the video. This performs some page loading operations asynchronously. To account for the loading time, the app uses the waitForExists() method alongside a preset time of 25ms before attempting to interact wiith a page."},{"TestID":48,"Test Name":"shoppinglist","App Name":"testIntentAddItemsFromArrayList","Stars":"2.2.1","Version":63,"Context":"This test check whether an item, identified by lastItemName, correctly appears in the user interface. The test inputs text into a view with the ID autocomplete_add_item, and then verifies if the item is displayed in a specific part of the UI, not in the main window's view. This ensures the proper functionality of UI elements that handle dynamic data, like autocomplete suggestions."},{"TestID":49,"Test Name":"open_flood","App Name":"newGameTest","Stars":"1.3.5","Version":132,"Context":"This test checks if the testing of a 'New Game' feature in a gaming app. It repeatedly clicks the new game button to generate several new games. Then, it performs a long click to open a dialog for starting a new game from a specific seed. The test initially cancels this dialog, then reopens it, inputs the seed 'abc', and starts a new game using this seed, verifying the functionality of starting games both normally and from a specified seed."},{"TestID":50,"Test Name":"open_flood","App Name":"changeNumColorsTest","Stars":"1.3.5","Version":132,"Context":"This test checks if the process of testing color settings in an application. Initially, it clicks six color buttons, then accesses settings to change to eight color buttons and applies this change. Next, the test re-enters settings, enabling color blind mode and an old color scheme, and sets the board size to 24x24, applying these settings. Finally, it tests the functionality by clicking all eight color buttons."},{"TestID":51,"Test Name":"Omni-Notes","App Name":"remindersLifecycle","Stars":"2.6k","Version":"6.1.0","Context":"This test checks the lifecycle of reminders within the app. It begins by clicking the menu button to expand options, then selects the option to create a new note. The test proceeds to interact with the reminder layout, likely setting a reminder for the note. After setting the reminder, it confirms by clicking \"Ok.\" Finally, it checks if a text view (presumably indicating the reminder status) correctly displays a message starting with \"Alarm set on,\" ensuring that reminders are being set and displayed properly within the app."},{"TestID":52,"Test Name":"Omni-Notes","App Name":"recurrenceRuleTextHasValue","Stars":"2.6k","Version":"6.1.0","Context":"This test checks if the recurrence rule text for a note is correctly displayed. It starts by waiting briefly, then clicks on the \"Sort\" option in the menu and selects \"Creation date\" to sort notes. After another brief wait, the first note in the list is selected. The test then retrieves the expected recurrence rule text for the selected note using the note's alarm and recurrence rule data. Finally, it verifies that the text displayed in the datetime view matches the expected recurrence rule text, ensuring the recurrence information is accurately shown in the note's details."},{"TestID":53,"Test Name":"Omni-Notes","App Name":"testGetNoteRecurrentReminderText","Stars":"2.6k","Version":"6.1.0","Context":"This test validates the functionality of generating a text description for a recurring note reminder. It uses a fixed reminder time and a recurrence rule specifying weekly recurrence on Monday, Tuesday, and Thursday. The test then checks if the generated reminder text correctly describes the recurrence pattern, comparing it to an expected string that details the recurrence schedule starting from a specific date and time."},{"TestID":54,"Test Name":"Omni-Notes","App Name":"getNotesByPatternEscaped","Stars":"2.6k","Version":"6.1.0","Context":"This test checks the functionality of retrieving notes based on specific content patterns. It creates three notes with distinct titles and contents. The contents of the first and third notes include special characters (underscore and percentage, respectively). After updating these notes in the database, the test then verifies the functionality of the getNotesByPattern method. It checks that only one note (the correct one) is returned when searching for each of the special characters, ensuring the app accurately finds notes containing specific patterns or special characters."},{"TestID":55,"Test Name":"Suntimeswidget","App Name":"test_showLightmapDialog","Stars":290,"Version":"0.12.10","Context":"This test checks the functionality of the lightmap dialog. If the lightmap feature is enabled in settings, the test displays the lightmap dialog, captures a screenshot, then rotates the device to check the dialog's behavior in a different orientation. It then verifies the dialog's content and closes it. If the lightmap feature is disabled, the test checks that the lightmap icon is not displayed in the app."},{"TestID":56,"Test Name":"Suntimeswidget","App Name":"test_showEquinoxDialog","Stars":290,"Version":"0.12.10","Context":"This test checks the equinox dialog's functionality. If equinox display is enabled in settings, the test opens the equinox dialog, captures a screenshot, then verifies the dialog content and closes it. If the equinox feature is disabled, the test ensures that the equinox information is not displayed in the app."},{"TestID":57,"Test Name":"otp-authenticator","App Name":"test005EditMode","Stars":153,"Version":"0.1.1","Context":"This test checks the functionality of the edit mode for two-factor authentication codes. Initially, it checks that the edit and delete options are not available (do not exist) by default. The test then performs a long click on the first item in the list (representing an OTP code) to activate the edit mode, confirming that the edit and delete actions are now displayed. It also checks that the correct authentication code is displayed in the action bar context view. The process is repeated for the second list item. Finally, the test exits the edit mode using the back button and verifies that the edit and delete options are no longer visible, ensuring the edit mode functions correctly for managing OTP codes."},{"TestID":58,"Test Name":"otp-authenticator","App Name":"test008Delete","Stars":153,"Version":"0.1.1","Context":"This test checks the deletion functionality of one-time password (OTP) accounts. The test iterates through the list of OTP accounts (represented by the codes array) in reverse order, removing each account one by one. For each account, it performs a long click to enable deletion, verifies that the delete action is visible, and then clicks on the delete action. A confirmation dialog with the \"Remove\" option is displayed, and the test confirms the removal of the account. After each deletion, it checks the list size to ensure it has decreased by one. Additionally, it verifies that a message confirming the account removal is displayed after each deletion, except for the last account, where it checks for a message indicating no accounts are left. This ensures that accounts can be successfully and individually deleted from the app."},{"TestID":59,"Test Name":"otp-authenticator","App Name":"test002NocodeScanned","Stars":153,"Version":"0.1.1","Context":"This test checks a scenario where no QR code is scanned. It mocks the QR scan cancellation and confirms that the app displays a message indicating no account has been added, ensuring proper handling of scan cancellations."},{"TestID":60,"Test Name":"otp-authenticator","App Name":"test003AddCodes","Stars":153,"Version":"0.1.1","Context":"This test automates adding OTP codes and verifying their presence. It mocks QR code scanning for each code in a predefined list, simulating successful scans and checking for an \"Account added\" message. It then validates that each account appears in the list with the correct label and generated OTP, ensuring the app correctly adds and displays new OTP accounts."},{"TestID":61,"Test Name":"otp-authenticator","App Name":"test003CodesChange","Stars":153,"Version":"0.1.1","Context":"This test checks that the one-time passwords (OTPs) change as expected over time. It first checks that the OTPs match the expected values for each code, then waits 30 seconds (the typical TOTP period) and verifies that new OTPs are generated, ensuring they are different from the old ones. This confirms the app's correctness in dynamically generating time-based OTPs."},{"TestID":62,"Test Name":"otp-authenticator","App Name":"test004Rearrange","Stars":153,"Version":"0.1.1","Context":"This test checks the functionality of rearranging OTP entries. It uses UI interactions to drag and rearrange the first two entries in the list, then verifies that the order has changed accordingly. After a delay, it repeats the process to return the entries to their original order. The test ensures that users can effectively reorder their OTP entries within the app's interface."},{"TestID":63,"Test Name":"otp-authenticator","App Name":"test005RenameCancel","Stars":153,"Version":"0.1.1","Context":"This test checks the cancel functionality during the rename process of an OTP entry. It initiates a long click on the second item in the list to enter the edit mode, then selects the edit action. The test attempts to rename the entry by appending text (\" VERY TEST\") but then cancels this action. Finally, it confirms that the original name of the entry remains unchanged in the list, ensuring that the cancel option works correctly in the rename process."},{"TestID":64,"Test Name":"otp-authenticator","App Name":"test006Rename","Stars":153,"Version":"0.1.1","Context":"This test verifies the rename functionality for an OTP entry. It selects the second item in the list, enters the edit mode, and then performs the edit action. The test renames the entry by appending \" VERY TEST\" to its original name and saves the change. Finally, it checks that the list reflects the updated name for the entry, confirming that the renaming process works correctly."},{"TestID":65,"Test Name":"otp-authenticator","App Name":"test007DeleteCancel","Stars":153,"Version":"0.1.1","Context":"This test checks the functionality of canceling a delete action for an OTP entry. It selects the first item in the list, enters delete mode, and then displays the delete confirmation dialog. The test then checks for the presence of both \"Remove\" and \"Cancel\" options. Upon clicking \"Cancel\", it confirms that the delete confirmation dialog disappears and that the total number of entries in the list remains unchanged, ensuring that the cancellation of the delete action works as intended."},{"TestID":66,"Test Name":"otp-authenticator","App Name":"test001InvalidQRCode","Stars":153,"Version":"0.1.1","Context":"This test checks the functionality of canceling a delete action for an OTP entry. It selects the first item in the list, enters delete mode, and then displays the delete confirmation dialog. The test then checks for the presence of both \"Remove\" and \"Cancel\" options. Upon clicking \"Cancel\", it confirms that the delete confirmation dialog disappears and that the total number of entries in the list remains unchanged, ensuring that the cancellation of the delete action works as intended."},{"TestID":67,"Test Name":"MicroPinner","App Name":"testPinVisibility","Stars":41,"Version":"2.2.0","Context":"This test checks the functionality related to the visibility setting of a pinned notification. It verifies that the visibility option within the app is set to 'Private' by default. This is done by accessing the visibility spinner (dropdown menu) and confirming that the selected option matches the 'Private' visibility setting, ensuring that the app correctly displays and sets the default visibility of new notifications or reminders."},{"TestID":68,"Test Name":"MicroPinner","App Name":"testDialogTitle","Stars":41,"Version":"2.2.0","Context":"This test checks the functionality of the dialog title. Specifically, it verifies that the title of a dialog within the app correctly displays the text intended for editing names. This is accomplished by accessing the dialog title element and confirming that its text content matches the predefined string resource for editing names (identified by R.string.edit_name). This ensures that the app is displaying the correct title text in the dialog for editing purposes."},{"TestID":69,"Test Name":"MicroPinner","App Name":"testDialogButtons","Stars":41,"Version":"2.2.0","Context":"This test verifies the functionality of dialog buttons. It specifically checks that the cancel button in a dialog is correctly labeled as \"Delete.\" This is done by accessing the cancel button (identified by R.id.buttonCancel) and confirming that its text matches the predefined string resource for a delete action (identified by R.string.dialog_action_delete). This test ensures that the button in the dialog is accurately labeled for its intended action, which in this case is deletion."},{"TestID":70,"Test Name":"MicroPinner","App Name":"testPinContent","Stars":41,"Version":"2.2.0","Context":"This test checks the functionality related to the content of a pin or notification. It verifies that the content in the editable text field for creating a pin (identified by R.id.editTextContent) matches a predefined constant value (Constants.testPinContent). This test ensures that when creating a new pin or notification, the content field is correctly displaying or is set to a specific default or test value, as intended in the app's functionality."},{"TestID":71,"Test Name":"MicroPinner","App Name":"testPinTitle","Stars":41,"Version":"2.2.0","Context":"This test verifies the title of a pin or notification. It checks that the title in the editable text field for creating a pin (identified by R.id.editTextTitle) is correctly set to a predefined constant value (Constants.testPinTitle). This ensures that the title field, when creating a new pin or notification, is displaying or initialized with the specific test value as intended, confirming the app's functionality in handling pin titles."},{"TestID":72,"Test Name":"connectbot","App Name":"localConnectionCanChangeToRed","Stars":"2.2k","Version":"0.4.13","Context":"This test checks the functionality of changing the color of a local connection. It involves starting a new local connection named \"RedLocal\", and then changing its display color to red. The test verifies that the app correctly applies the color change to the specified local connection, ensuring the color customization feature works as intended."},{"TestID":73,"Test Name":"connectbot","App Name":"generateRSAKey","Stars":"2.2k","Version":"0.4.13","Context":"This test checks the RSA key generation feature. It starts by initiating the process with a click on the \"add new key\" icon. The test then sets up a key generation monitoring resource, enters a nickname for the new key, and saves it. It includes steps to provide necessary entropy for secure key generation. The code uses idling policies to manage time allowances for the key generation process. Finally, it verifies that a new RSA key with the specified nickname (\"test1\") is successfully created and listed, ensuring the key generation feature functions correctly."},{"TestID":74,"Test Name":"connectbot","App Name":"localConnectionDisconnectConsoleActivity","Stars":"2.2k","Version":"0.4.13","Context":"This test checks the disconnection functionality of a local connection. It starts by establishing a new local connection. Then, it accesses the action bar overflow menu and selects the option to disconnect. The test confirms that the disconnection is successful by verifying that the local connection is marked as disconnected in the app's list view. This ensures that the disconnect feature works properly within the app's console activity for local connections."},{"TestID":75,"Test Name":"connectbot","App Name":"canScrollTerminal","Stars":"2.2k","Version":"0.4.13","Context":"This test verifies the scroll functionality in the terminal view. It begins by establishing a new local connection. Then, it focuses on the terminal view within the app, ensuring that the software keyboard is closed to avoid interference. The test performs a long click followed by swipe gestures up and down. This sequence tests the app's ability to smoothly scroll through the terminal's output, confirming that users can navigate through terminal content effectively."},{"TestID":76,"Test Name":"connectbot","App Name":"canToggleSoftKeyboardVisibility","Stars":"2.2k","Version":"0.4.13","Context":"This test verifies the functionality of toggling the visibility of the soft keyboard. Initially, the test checks if the device has a hardware keyboard and proceeds only if the keyboard is hidden (suitable for devices relying on a soft keyboard). It then alters the app's preferences to ensure the show\/hide keyboard button doesn't auto-hide. After changing this setting, the test initiates a new local connection and performs actions to hide and then show the soft keyboard. Finally, it restores the original keyboard visibility preference. This test ensures that users can manually control the visibility of the soft keyboard within the app."},{"TestID":77,"Test Name":"connectbot","App Name":"localConnectionDisconnectFromHostList","Stars":"2.2k","Version":"0.4.13","Context":"This test checks the functionality of disconnecting a local connection from the host list. It starts by initiating a new local connection. The test then simulates pressing the back button to return to the host list while ensuring the soft keyboard is closed. It verifies that the connection is still active (\"Local\" host is connected). Next, the test performs a long click on the connected host and selects the option to disconnect. Finally, it confirms that the host (\"Local\") is now correctly marked as disconnected in the host list, validating the disconnection process from the host list perspective."},{"TestID":78,"Test Name":"connectbot","App Name":"localConnectionCanDelete","Stars":"2.2k","Version":"0.4.13","Context":"This test verifies the deletion functionality of a local connection. It begins by creating a new local connection named \"Local\" and then navigates back to the main list. The test proceeds with a long click on the \"Local\" connection to open a context menu. From this menu, it selects the option to delete the connection. Finally, the test confirms the deletion by clicking on the positive option (usually labeled \"Delete\" or \"Yes\") in the confirmation dialog, ensuring that the local connection can be successfully and intentionally removed from the app."},{"TestID":79,"Test Name":"Equate","App Name":"testUnitSearch","Stars":64,"Version":"2.0","Context":"This test checks if searching and selecting various units, including currencies like Swiss Francs (CHF), Satoshi, and Bitcoin (BTC), as well as non-currency units like thousandths of an inch (mil) and pints. The test involves resetting the calculator, performing searches, checking for correct unit conversions, and ensuring the correct unit names appear. It verifies that the app accurately converts between selected units, such as BTC to Satoshi and inches to feet, maintaining functionality across different unit types."},{"TestID":80,"Test Name":"Equate","App Name":"testCheckUnitTypeNames","Stars":64,"Version":"2.0","Context":"This test checks the functionality of unit type visibility and navigation. It starts by ensuring all unit types are visible, then tests switching between different unit tabs like Length and Volume. The code verifies correct unit selection, checks for the presence of unit conversion arrows, and ensures that the app correctly resets when switching between non-adjacent unit types. The test also includes hiding specific unit types (like Weight, Length, Energy, Temperature) and verifying they are no longer visible. Finally, it tests hiding all unit types and checks that they are appropriately removed from visibility."}];